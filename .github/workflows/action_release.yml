name: Auto Release from Changelog

on:
  push:
    branches: [main]
    paths:
      - '**.cs'
      - '**.csproj'
      - 'CHANGELOG.md'
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'New version tag (e.g. v0.1.010)'
        required: true
        default: 'v0.0.000'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install GTK (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y libgtk-3-dev pkg-config

      - name: Restore NcWpf (Windows)
        if: matrix.os == 'windows-latest'
        run: dotnet restore NcWpf/NcWpf.csproj

      - name: Restore NcGtk (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: dotnet restore NcGtk/NcGtk.csproj

      - name: Build NcWpf (Windows)
        if: matrix.os == 'windows-latest'
        run: dotnet publish NcWpf/NcWpf.csproj -c Release -o publish/NcWpf

      - name: Archive NcWpf (Windows)
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path publish/NcWpf/* -DestinationPath NcWpf.zip

      - name: Build NcGtk (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: dotnet publish NcGtk/NcGtk.csproj -c Release -o publish/NcGtk

      - name: Archive NcGtk (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: zip -r NcGtk.zip ./publish/NcGtk

      - name: Upload NcWpf artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NcWpf
          path: NcWpf.zip

      - name: Upload NcGtk artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: NcGtk
          path: NcGtk.zip

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Download NcWpf artifact
        uses: actions/download-artifact@v4
        with:
          name: NcWpf
          path: ./artifacts

      - name: Download NcGtk artifact
        uses: actions/download-artifact@v4
        with:
          name: NcGtk
          path: ./artifacts

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ github.event.inputs.version }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} ${{ github.event.inputs.version }}

      - name: Parse changelog
        id: changelog
        run: |
          body=$(awk '/^##\s*${{ github.event.inputs.version }}/,/^##/' CHANGELOG.md | sed '1d' | sed '$d')
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.body }}
          files: |
            artifacts/NcWpf.zip
            artifacts/NcGtk.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
