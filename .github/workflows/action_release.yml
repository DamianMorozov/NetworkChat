name: Auto Release from Changelog

on:
  push:
    branches: [main]
    paths:
      - '**.cs'
      - '**.csproj'
      - 'CHANGELOG.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            project: NcGtk
            output: NcGtk.zip
          - os: windows-latest
            project: NcWpf
            output: NcWpf.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install GTK (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y libgtk-3-dev pkg-config

      - name: Restore dependencies
        run: dotnet restore NetworkChat.sln

      - name: Build
        run: dotnet build ${{ matrix.project }}/${{ matrix.project }}.csproj --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ${{ matrix.project }}/${{ matrix.project }}.csproj --configuration Release --output ./publish/${{ matrix.project }}

      - name: Archive
        run: zip -r ${{ matrix.output }} ./publish/${{ matrix.project }}

      - name: Move ZIP to workspace
        run: mv ${{ matrix.output }} ${{ github.workspace }}/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from CHANGELOG.md
        id: changelog
        run: |
          VERSION=$(grep -m1 '^## \[' CHANGELOG.md | sed -E 's/^## \[([0-9]+\.[0-9]+\.[0-9]+)\].*/v\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Push Git Tag
        run: |
          git tag ${{ steps.changelog.outputs.version }}
          git remote set-url origin https://x-access-token:${{ secrets.GH_PUSH_TOKEN }}@github.com/${{ github.repository }}
          git push origin ${{ steps.changelog.outputs.version }}
        env:
          GH_PUSH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            NcGtk.zip
            NcWpf.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}