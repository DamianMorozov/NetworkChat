name: Auto Release from Changelog

on:
  push:
    branches: [main]
    paths:
      - '**.cs'
      - '**.csproj'
      - 'CHANGELOG.md'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore NcWpf (Windows)
        run: dotnet restore NcWpf/NcWpf.csproj
      - name: Build NcWpf (Windows)
        run: dotnet publish NcWpf/NcWpf.csproj -c Release -o publish/NcWpf
      - name: Archive NcWpf (Windows)
        run: Compress-Archive -Path publish/NcWpf/* -DestinationPath NcWpf.zip
      - name: Upload NcWpf artifact
        uses: actions/upload-artifact@v4
        with:
          name: NcWpf
          path: NcWpf.zip

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install GTK (Linux only)
        run: sudo apt update && sudo apt install -y libgtk-3-dev pkg-config
      - name: Restore NcGtk (Linux)
        run: dotnet restore NcGtk/NcGtk.csproj
      - name: Build NcGtk (Linux)
        run: dotnet publish NcGtk/NcGtk.csproj -c Release -o publish/NcGtk
      - name: Archive NcGtk (Linux)
        run: zip -r NcGtk.zip ./publish/NcGtk
      - name: Upload NcGtk artifact
        uses: actions/upload-artifact@v4
        with:
          name: NcGtk
          path: NcGtk.zip

  release:
    needs: [build_windows, build_linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest version from CHANGELOG
        id: get_version
        run: echo "version=v$(grep '^## \[' CHANGELOG.md | head -n1 | sed 's/^## \[\(.*\)\].*/\1/')" >> $GITHUB_OUTPUT
      - name: Download NcWpf artifact
        uses: actions/download-artifact@v4
        with:
          name: NcWpf
          path: ./artifacts
      - name: Extract release body from CHANGELOG
        id: get_body
        run: |
            body=$(awk '/^## \[/{i++} i==1{print}' CHANGELOG.md | tail -n +2)
            echo "body<<EOF" >> $GITHUB_OUTPUT
            echo "$body" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
      - name: Download NcGtk artifact
        uses: actions/download-artifact@v4
        with:
          name: NcGtk
          path: ./artifacts
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Create tag and release
        run: |
          gh auth setup-git
          gh release create ${{ steps.get_version.outputs.version }} ./artifacts/* \
            --title "${{ steps.get_version.outputs.version }}" \
            --notes "${{ steps.get_body.outputs.body }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          body: ${{ steps.get_body.outputs.body }}
          name: Release ${{ github.event.inputs.version }}
          files: |
            artifacts/NcWpf.zip
            artifacts/NcGtk.zip
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
